% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddPCR_linked_duplex.r
\name{ddPCR_linked_duplex}
\alias{ddPCR_linked_duplex}
\title{Analyze a duplex ddPCR output regarding linked and unlinked targets}
\usage{
ddPCR_linked_duplex(x)
}
\arguments{
\item{x}{A named numeric vector with elements 'A', 'B', 'AandB', 'N' or a
matrix with these column names. If a matrix, each row represents a measurement.
In the input,
'A' is the number of droplets being detected as positive for the first target
only. Likewise, 'B' is the number of droplets being positive
for the second target only. 'AandB' is the observed number of
droplets being double-positive for any reason, i.e. because they contain
'ab' or 'A' and 'B', including mixtures thereof like, e.g., 'ab' and 'A'.
Finally, 'N' represents the total number of droplets.}
}
\value{
A numeric vector or matrix, depending on the input, with (column)
  names 'A', 'B', 'ab'. Values represent estimates of
  the respective numbers of copies in the sample. Here, 'ab' refers to
  copies of physically linked targets while 'A' and 'B' refer to copies
  of the physically isolated targets. Note that the output values of 'A' and
  'B' will generally be larger than the corresponding input values
  due to the occurrence of multiple targets per droplet. For example, target
  A is contained in droplets having A only, but also in those having A and B,
  A and ab, A and B and ab, and there may even be cases where a droplet holds
  multiple copies of a particular target (e.g. A and A, A and A and B, ...).
}
\description{
The function analyzes the output of a ddPCR run containing targets 'A' and 'B',
but also 'ab'. Here, 'ab' represents cases where A and B are present on the same
fragment of DNA. The tricky part is to properly resolve the double-positive
droplets into those containing the physically linked target (ab) and those
containing the two individual targets (A and B) without physical linkage.
Likewise, when estimating the number of copies of a single target, e.g. A,
we need to account for mixed droplets (e.g., A and B, A and ab) which are
equally observed as double-positive. Finally, there may be multiple copies
of the same target in a single droplet if the proportion of empty droplets
is low (which is generally undesired but may happen in real-worlds settings).
}
\note{
The solution is currently computed numerically although an analytic solution
of the underlying system of equations is possible. In fact, the
analytic solution can be found in Eq. 4 of this supplement
\url{https://doi.org/10.1371/journal.pone.0118270.s005} where they compute
directly the average number of linked targets per droplet, i.e. lambda,
the parameter of the Poisson distribution. To get the number of linked copies,
one just needs to multiply that lambda with the total number of droplets.
}
\examples{

# a simple call
ddPCR_linked_duplex(c(N=1000, A=30, B=50, AandB=100))

# run a series of virtual ddPCR experiments and compare the estimated
# copy numbers to the known true numbers
out <- NULL
for (replicate_number in 1:30) {
  
# random numbers for current experiment
  n_droplets <- 1000
  copies_A <- runif(n=1, min=5, max=500)
  copies_B <- runif(n=1, min=5, max=500)
  copies_ab <- runif(n=1, min=5, max=500)
  
  # generate droplets containing 0, 1, or more copies of the targets
  A <- rpois(n=n_droplets, lambda=copies_A/n_droplets)
  B <- rpois(n=n_droplets, lambda=copies_B/n_droplets)
  ab <- rpois(n=n_droplets, lambda=copies_ab/n_droplets)
  
  # observations corresponding to droplets
  pos <- function(x) {x > 0}
  neg <- function(x) {x == 0}
  obs <- c(
    A=sum(pos(A) & neg(B) & neg(ab)),
    B=sum(pos(B) & neg(A) & neg(ab)),
    AandB=sum(pos(ab) | (pos(A) & pos(B)))
  )
  
  # estimate the number of copies
  est <- ddPCR_linked_duplex(c(N=n_droplets, obs))
  
  # save estimates together with known values
  out <- rbind(out, data.frame(
    A.true=copies_A, B.true=copies_B, ab.true=copies_ab, as.list(est)
  ))
}

# plot estimates vs. truth
par(mfrow=c(3,1))
for (x in c("A","B","ab")) {
  plot(out[,paste0(x,".true")], out[,x],
    xlab="true number of copies", ylab="estimated number of copies")
  abline(0,1)
  legend("topleft", bty="n", legend=paste("Target:",x))
}
par(mfrow=c(1,1))
}
\author{
David Kneis \email{david.kneis@tu-dresden.de}
}
